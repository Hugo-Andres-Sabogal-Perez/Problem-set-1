df = DF[,colnames(DF) == col]
NAs = sum(is.na(df))
mean = mean(df, na.rm = T)
sd = sqrt(var(df, na.rm = T))
ED[ED$Variable == col, 3] = NAs
ED[ED$Variable == col, 4] = mean
ED[ED$Variable == col, 5] = sd
}
C = ED %>% filter(Desviacion.Estandard == 0) %>% select(Variable) %>% as.vector()
View(ED)
stargazer(fwlmod, type="text", title = "Resultados FWL Simple", out = "Views/mod2.txt")
View(FWL)
View(fwlmod)
View(fwlmod)
yprima[residuals]
ypmod[residuals]
ypmod["residuals"]
modelo3 <- lm(ln_sal~ Female + age + maxEducLevel + formal + oficio + hoursWorkUsual + p7040 + sizeFirm, data=base)
modelo3
stargazer(modelo3, type="text", title = "Resultados Modelo 3", out = "Views/mod3.txt")
ypmod = lm(ln_sal ~ age + maxEducLevel + formal + oficio + hoursWorkUsual + p7040 + sizeFirm, data=base)
xpmod = lm(Female ~ age + maxEducLevel + formal + oficio + hoursWorkUsual + p7040 + sizeFirm, data=base)
FWL = data.frame('yprima' = ypmod["residuals"], 'xprima' = xpmod["residuals"])
fwlmod = lm(yprima ~ xprima, data = FWL)
stargazer(fwlmod, type="text", title = "Resultados FWL Simple", out = "Views/mod2.txt")
View(FWL)
View(FWL)
fwlmod = lm(residuals ~ residuals.1, data = FWL)
stargazer(fwlmod, type="text", title = "Resultados FWL Simple", out = "Views/mod2.txt")
FWL_boots <-function(data,index){
ypmod = lm(ln_sal ~ age + maxEducLevel + formal + oficio + hoursWorkUsual + p7040 + sizeFirm, data, subset=index)
xpmod = lm(Female ~ age + maxEducLevel + formal + oficio + hoursWorkUsual + p7040 + sizeFirm,data, subset=index)
yprima = ypmod["residuals"]
xprima = xpmod["residuals"]
FWL = data.frame('yprima' = yprima, 'xprima' = xprima)
fwlmod = lm(yprima ~ xprima, data = FWL)
coefs = fwlmod$coefficients[1]
return(coefs)
}
wage_gap = boot(data=base, FWL_boots, R=nrow(base))
FWL_boots <-function(data,index){
ypmod = lm(ln_sal ~ age + maxEducLevel + formal + oficio + hoursWorkUsual + p7040 + sizeFirm, data, subset=index)
xpmod = lm(Female ~ age + maxEducLevel + formal + oficio + hoursWorkUsual + p7040 + sizeFirm,data, subset=index)
yprima = ypmod["residuals"]
xprima = xpmod["residuals"]
FWL = data.frame('yprima' = yprima, 'xprima' = xprima)
colnames(FWL)= c("yprima", "xprima")
fwlmod = lm(yprima ~ xprima, data = FWL)
coefs = fwlmod$coefficients[1]
return(coefs)
}
wage_gap = boot(data=base, FWL_boots, R=nrow(base))
wage_gap
# Calculo intervalo de confianza:
boot.ci(boot.out = wage_gap, conf = c(0.95, 0.99), type = 'all')
DF<-importar_datos()
write.csv(x = DF, file = "Stores/DF.csv", row.names = FALSE)
DF<-import("Stores/DF.csv")
rm(list = ls())
#Llamamos las librerías necesarias para la realización del trabajo
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
DF<-importar_datos()
rm(list = ls())
#Llamamos las librerías necesarias para la realización del trabajo
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
write.csv(x = DF, file = "Stores/DF.csv", row.names = FALSE)
DF<-importar_datos()
rm(list = ls())
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
library(grid)
DF<-importar_datos()
?importar_datos
rm(list = ls())
require(tidyverse)
require(pacman)
install.packages("pacman")
install.packages("pacman")
require(pacman)
require(rvest)
require(stargazer)
require(rio)
require(caret)
install.packages("carret")
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
install.packages("tidytable")
DF<-importar_datos()
install.packages("readr")
library("readr")
require(rvest)
DF<-importar_datos()
write.csv(x = DF, file = "Stores/DF.csv", row.names = FALSE)
DF<-import("Stores/DF.csv")
vars = length(colnames(DF))
ED = data.frame('Variable' = colnames(DF), 'Missings' = rep(NA, vars), 'Media' =  rep(NA, vars), 'Desviacion Estandard' = rep(NA, vars))
# Se cuentan los missings y se calcula la media y la desviación estándar de la muestra:
for(col in colnames(DF)){
df = DF[,colnames(DF) == col]
NAs = sum(is.na(df))
mean = mean(df, na.rm = T)
sd = sqrt(var(df, na.rm = T))
ED[ED$Variable == col, 2] = NAs
ED[ED$Variable == col, 3] = mean
ED[ED$Variable == col, 4] = sd
}
C = ED %>% filter(Desviacion.Estandard == 0 | is.na(Desviacion.Estandard)) %>% select(Variable) %>% as.vector()
base= DF %>% select(age,oficio, formal, maxEducLevel, orden, p7040, sex, sizeFirm, y_ingLab_m_ha, hoursWorkUsual)
require("dplyr")
= ED %>% filter(Desviacion.Estandard == 0 | is.na(Desviacion.Estandard)) %>% select(Variable) %>% as.vector()
C = ED %>% filter(Desviacion.Estandard == 0 | is.na(Desviacion.Estandard)) %>% select(Variable) %>% as.vector()
ED = ED %>% filter(Desviacion.Estandard != 0 | !is.na(Desviacion.Estandard))
DF = DF[!is.na(DF$y_ingLab_m_ha),]
DF = DF %>% select(-C$Variable)
base= DF %>% select(age,oficio, formal, maxEducLevel, orden, p7040, sex, sizeFirm, y_ingLab_m_ha, hoursWorkUsual)
stargazer(base, type= "text", summary=T, title = "Estadisticas Descriptivas",out = "Views/esta_des.txt")
vars = length(colnames(base))
missingb = data.frame('Variable' = colnames(base), 'Missings' = rep(NA, vars))
for(col in colnames(base)){
df = base[,colnames(base) == col]
NAs = sum(is.na(df))
missingb[missingb$Variable == col, 2] = NAs
}
# Eliminar la observacion:
base = base[!(is.na(base$maxEducLevel)),]
base$ln_sal = log(base$y_ingLab_m_ha) #Se crea el logaritmo del salario por horas para normalizar los valores de la variable.
histograma <- ggplot(base, aes(x=ln_sal)) +
geom_histogram(color="white",fill="darkblue") +
xlab('Logaritmo del salario por hora') + ylab('Frecuencia') +
theme_bw()
require(tidyverse)
histograma <- ggplot(base, aes(x=ln_sal)) +
geom_histogram(color="white",fill="darkblue") +
xlab('Logaritmo del salario por hora') + ylab('Frecuencia') +
theme_bw()
histograma
ggsave("Views/histograma.png", width = 6, height = 4,plot=histograma)
dispersion = ggplot(base, aes(x=age, y=ln_sal)) + geom_point(color="navy") +
theme_bw() +
geom_smooth(method = 'lm',color="firebrick") +xlab('Edad')+
ylab('Logaritmo del salario por hora')
dispersion
ggsave("Views/dispersion.png", width = 6, height = 4,plot=dispersion)
histograma_salario <- ggplot(base, aes(x=y_ingLab_m_ha)) +
geom_histogram(color="white",fill="darkblue") +
xlab('Logaritmo del salario por hora') + ylab('Frecuencia') +
theme_bw()
histograma_salario
ggsave("Views/histograma_sal.png", width = 6, height = 4,plot=histograma_salario)
base$sex_factor <- factor(base$sex, levels = c(1,0),
labels = c('Masculino', 'Femenino'))
base$sex_factor<-factor(base$sex_factor)
dispersion2 = ggplot(base, aes(x = age, y = ln_sal)) +
geom_point(aes(color = sex_factor)) +
theme_bw() +
geom_smooth(color = "black", method = "lm", formula = y ~ poly(x, 2)) +
xlab("Edad") +
ylab("Logaritmo del salario por hora") +
scale_color_manual(values = c("Masculino" = "skyblue", "Femenino" ="maroon" )) +
guides(color = guide_legend(title = "Sexo", title.hjust = 0.5))
dispersion2
ggsave("Views/dispersion2.png", width = 6, height = 4,plot=dispersion2)
barras1 <- ggplot(edad_salario, aes(x = edad_cat, y = mean_sal)) +
geom_bar(width = 0.5, colour = "black", fill = "skyblue", stat = "identity") +
labs(x = "Edad en años", y = "Salario promedio") +
theme_bw() +
scale_y_continuous(labels = scales::dollar_format())
base$edad_cat <- cut(base$age, breaks = c(17, 29, 45, 59, Inf), labels = c("18-29", "30-45", "46-59", "60 o más"))
edad_salario<-base %>% group_by(edad_cat) %>%
summarize(mean_sal=mean(y_ingLab_m_ha))
barras1 <- ggplot(edad_salario, aes(x = edad_cat, y = mean_sal)) +
geom_bar(width = 0.5, colour = "black", fill = "skyblue", stat = "identity") +
labs(x = "Edad en años", y = "Salario promedio") +
theme_bw() +
scale_y_continuous(labels = scales::dollar_format())
barras1
ggsave("Views/barras1.png", width = 6, height = 4,plot=barras1)
barras1 <- ggplot(edad_salario, aes(x = Female, y = mean_sal)) +
geom_bar(width = 0.5, colour = "black", fill = "skyblue", stat = "identity") +
labs(x = "Mujer", y = "Log del Salario por hora") +
theme_bw() +
scale_y_continuous(labels = scales::dollar_format())
barras1
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
base$age_2 <- base$age^2
modelo1 <- lm(ln_sal~age + age_2, data=base)
stargazer(modelo1, type="latex", title = "Resultados Modelo 1", out = "Views/mod1.txt")
FWL_boots <-function(data,index){
ypmod = lm(ln_sal ~ age + factor(maxEducLevel) + formal + factor(oficio)+ hoursWorkUsual + p7040 + sizeFirm, data, subset=index)
xpmod = lm(Female ~ age + factor(maxEducLevel)l + formal + factor(oficio) + hoursWorkUsual + p7040 + sizeFirm,data, subset=index)
FWL_boots <-function(data,index){
ypmod = lm(ln_sal ~ age + factor(maxEducLevel) + formal + factor(oficio) + hoursWorkUsual + p7040 + sizeFirm, data, subset=index)
xpmod = lm(Female ~ age + factor(maxEducLevel) + formal + factor(oficio) + hoursWorkUsual + p7040 + sizeFirm,data, subset=index)
yprima = ypmod["residuals"]
xprima = xpmod["residuals"]
FWL = data.frame('yprima' = yprima, 'xprima' = xprima)
colnames(FWL)= c("yprima", "xprima")
fwlmod = lm(yprima ~ xprima, data = FWL)
coefs = fwlmod$coefficients[2]
return(coefs)
}
# Se hace la estimacion por bootstrap:
wage_gap = boot(data=base, FWL_boots, R=100)
base$Female <- ifelse(base$sex == 0, 1, 0)
base$p7040= base$p7040-1
FWL_boots <-function(data,index){
ypmod = lm(ln_sal ~ age + factor(maxEducLevel) + formal + factor(oficio) + hoursWorkUsual + p7040 + sizeFirm, data, subset=index)
xpmod = lm(Female ~ age + factor(maxEducLevel) + formal + factor(oficio) + hoursWorkUsual + p7040 + sizeFirm,data, subset=index)
yprima = ypmod["residuals"]
xprima = xpmod["residuals"]
FWL = data.frame('yprima' = yprima, 'xprima' = xprima)
colnames(FWL)= c("yprima", "xprima")
fwlmod = lm(yprima ~ xprima, data = FWL)
coefs = fwlmod$coefficients[2]
return(coefs)
}
# Se hace la estimacion por bootstrap:
wage_gap = boot(data=base, FWL_boots, R=100)
wage_gap
stargazer(fwlmod,fwlmod, type="latex", title = "Resultados FWL Simple", out = "Views/modfwl.txt")
ypmod = lm(ln_sal ~ age + factor(maxEducLevel) + formal + factor(oficio) + hoursWorkUsual + p7040 + sizeFirm, data=base)
xpmod = lm(Female ~ age + factor(maxEducLevel) + formal + factor(oficio) + hoursWorkUsual + p7040 + sizeFirm, data=base)
FWL = data.frame('yprima' = ypmod["residuals"], 'xprima' = xpmod["residuals"])
fwlmod = lm(residuals ~ residuals.1, data = FWL)
stargazer(fwlmod, type="latex", title = "Resultados FWL Simple", out = "Views/modfwl.txt")
FWL_boots <-function(data,index){
ypmod = lm(ln_sal ~ age + factor(maxEducLevel) + formal + factor(oficio) + hoursWorkUsual + p7040 + sizeFirm, data, subset=index)
xpmod = lm(Female ~ age + factor(maxEducLevel) + formal + factor(oficio) + hoursWorkUsual + p7040 + sizeFirm,data, subset=index)
yprima = ypmod["residuals"]
xprima = xpmod["residuals"]
FWL = data.frame('yprima' = yprima, 'xprima' = xprima)
colnames(FWL)= c("yprima", "xprima")
fwlmod = lm(yprima ~ xprima, data = FWL)
coefs = fwlmod$coefficients[2]
return(coefs)
}
# Se hace la estimacion por bootstrap:
wage_gap = boot(data=base, FWL_boots, R=100)
wage_gap
stargazer(fwlmod,wage_gap, type="latex", title = "Resultados FWL Simple", out = "Views/modfwl.txt")
base_female<- base %>% filter(Female==1)
base_male<-base %>% filter(Female==0)
predict_plot<-ggplot() +
geom_smooth(data=base_male, aes(x=age, y=ln_sal), color='steelblue', method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=base_female, aes(x=age, y=ln_sal), color='coral2', method = "lm", formula = y ~ poly(x, 2)) +
theme_bw() +
labs(x = "Edad en años", y = "Logaritmo del salario")
predict_plot
base_female<- base %>% filter(Female==1)
base_male<-base %>% filter(Female==0)
predict_plot<-ggplot() +
geom_smooth(data=base_male, aes(x=age, y=ln_sal), color='steelblue', method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=base_female, aes(x=age, y=ln_sal), color='coral2', method = "lm", formula = y ~ poly(x, 2)) +
theme_bw() +
labs(x = "Edad en años", y = "Logaritmo del salario") +
guide_legend(title="sexo")
predict_plot<-ggplot() +
geom_smooth(data=base_male, aes(x=age, y=ln_sal), color='steelblue', method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=base_female, aes(x=age, y=ln_sal), color='coral2', method = "lm", formula = y ~ poly(x, 2)) +
theme_bw() +
labs(x = "Edad en años", y = "Logaritmo del salario") +
scale_color_manual(values = c("Masculino" = "steelblue", "Femenino" ="coral2" )) +
guides(color = guide_legend(title = "Sexo", title.hjust = 0.5))
predict_plot
predict_plot<-ggplot() +
geom_smooth(data=base_male, aes(x=age, y=ln_sal), color='steelblue', method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=base_female, aes(x=age, y=ln_sal), color='coral2', method = "lm", formula = y ~ poly(x, 2)) +
theme_bw() +
labs(x = "Edad en años", y = "Logaritmo del salario") +
guide:legend(title= "Género",  override.aes = list(color = c("steelblue", "coral2")),
legend = "point")
predict_plot<-ggplot() +
geom_smooth(data=base_male, aes(x=age, y=ln_sal), color='steelblue', method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=base_female, aes(x=age, y=ln_sal), color='coral2', method = "lm", formula = y ~ poly(x, 2)) +
theme_bw() +
labs(x = "Edad en años", y = "Logaritmo del salario") +
guide_legend(title= "Género",  override.aes = list(color = c("steelblue", "coral2")),
legend = "point")
predict_plot<-ggplot() +
geom_smooth(data=base_male, aes(x=age, y=ln_sal), color='steelblue', method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=base_female, aes(x=age, y=ln_sal), color='coral2', method = "lm", formula = y ~ poly(x, 2)) +
theme_bw() +
labs(x = "Edad en años", y = "Logaritmo del salario") +
guide(title= "Género",  override.aes = list(color = c("steelblue", "coral2")),
legend = "point")
dispersion2 = ggplot(base, aes(x = age, y = ln_sal)) +
geom_point(color = "salmon") +
theme_bw() +
geom_smooth(color = "black", method = "lm", formula = y ~ poly(x, 2)) +
xlab("Edad") +
ylab("Logaritmo del salario por hora")
dispersion2
ggsave("Views/dispersion2.png", width = 6, height = 4,plot=dispersion2)
base_female<- base %>% filter(Female==1)
base_male<-base %>% filter(Female==0)
predict_plot<-ggplot() +
geom_smooth(data=base_male, aes(x=age, y=ln_sal), color='steelblue', method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=base_female, aes(x=age, y=ln_sal), color='coral2', method = "lm", formula = y ~ poly(x, 2)) +
theme_bw() +
labs(x = "Edad en años", y = "Logaritmo del salario")
predict_plot
predict_plot<-ggplot() +
geom_smooth(data=base_male, aes(x=age, y=ln_sal), color='steelblue', method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=base_female, aes(x=age, y=ln_sal), color='coral2', method = "lm", formula = y ~ poly(x, 2)) +
theme_bw() +
labs(x = "Edad en años", y = "Logaritmo del salario") +
scale_color_manual(values = c(“Masculino” = “steelblue”, “Grupo 2” = “coral2”))
predict_plot<-ggplot() +
geom_smooth(data=base_male, aes(x=age, y=ln_sal), color='steelblue', method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=base_female, aes(x=age, y=ln_sal), color='coral2', method = "lm", formula = y ~ poly(x, 2)) +
theme_bw() +
labs(x = "Edad en años", y = "Logaritmo del salario") +
scale_fill_manual(values = c(“Masculino” = “steelblue”, “Femenino” = “coral2”))
base= DF %>% select(age,oficio, formal, maxEducLevel, orden, p7040, sex, sizeFirm, y_ingLab_m_ha, hoursWorkUsual)
base$ln_sal = log(base$y_ingLab_m_ha) #Se crea el logaritmo del salario por horas para normalizar los valores de la variable.
stargazer(base, type= "text", summary=T, title = "Estadisticas Descriptivas",out = "Views/esta_des.txt")
DF<-import("Stores/DF.csv")
# Se crea una base para guardar las estadisticas descriptivas más relevantes para el trabajo:
vars = length(colnames(DF))
ED = data.frame('Variable' = colnames(DF), 'Missings' = rep(NA, vars), 'Media' =  rep(NA, vars), 'Desviacion Estandard' = rep(NA, vars))
# Se cuentan los missings y se calcula la media y la desviación estándar de la muestra:
for(col in colnames(DF)){
df = DF[,colnames(DF) == col]
NAs = sum(is.na(df))
mean = mean(df, na.rm = T)
sd = sqrt(var(df, na.rm = T))
ED[ED$Variable == col, 2] = NAs
ED[ED$Variable == col, 3] = mean
ED[ED$Variable == col, 4] = sd
}
# 1. Limpieza de datos:
# Se eliminan las constantes (u observaciones que tienen desviación estándar igual a cero) y las variables sin observaciones (missings):
C = ED %>% filter(Desviacion.Estandard == 0 | is.na(Desviacion.Estandard)) %>% select(Variable) %>% as.vector()
ED = ED %>% filter(Desviacion.Estandard != 0 | !is.na(Desviacion.Estandard))
DF = DF[!is.na(DF$y_ingLab_m_ha),]
DF = DF %>% select(-C$Variable)
View(DF)
View(DF)
DF = DF[!is.na(DF$y_ingLab_m_ha),]
View(ED)
View(base)
base= DF %>% select(age,oficio, formal, maxEducLevel, orden, p7040, sex, sizeFirm, y_ingLab_m_ha, hoursWorkUsual)
base$ln_sal = log(base$y_ingLab_m_ha) #Se crea el logaritmo del salario por horas para normalizar los valores de la variable.
stargazer(base, type= "text", summary=T, title = "Estadisticas Descriptivas",out = "Views/esta_des.txt")
histograma_salario <- ggplot(base, aes(x=y_ingLab_m_ha)) +
geom_histogram(color="white",fill="darkblue") +
xlab('Salario por hora') + ylab('Frecuencia') +
theme_bw()
histograma_salario
ggsave("Views/histograma_sal.png", width = 6, height = 4,plot=histograma_salario)
histograma <- ggplot(base, aes(x=ln_sal)) +
geom_histogram(color="white",fill="darkblue") +
xlab('Logaritmo del salario por hora') + ylab('Frecuencia') +
theme_bw()
histograma
ggsave("Views/histograma.png", width = 6, height = 4,plot=histograma)
dispersion = ggplot(base, aes(x=age, y=ln_sal)) + geom_point(color="navy") +
theme_bw() +
geom_smooth(method = 'lm',color="firebrick") +xlab('Edad')+
ylab('Logaritmo del salario por hora')
dispersion
ggsave("Views/dispersion.png", width = 6, height = 4,plot=dispersion)
Salario_sex <- base %>% group_by(sex_factor)  %>%
summarize(mean_sal_sex=mean(y_ingLab_m_ha))
Salario_sex <- base %>% group_by(sex_factor)  %>%
summarize(mean_sal_sex=mean(y_ingLab_m_ha))
Edad <-base %>% group_by(age) %>%
summarize(mean_sal=mean(y_ingLab_m_ha))
barras2 <- ggplot(Edad, aes(x = age, y = mean_sal)) +
geom_bar(width = 0.5, colour ="skyblue", fill = "skyblue", stat = "identity") +
labs(x = "Edad", y = "Salario promedio") +
theme_bw() +
scale_y_continuous(labels = scales::dollar_format())
barras2
ggsave("Views/barras2.png", width = 6, height = 4,plot=barras2)
DF<-import("Stores/DF.csv")
rm(list = ls())
#Llamamos las librerías necesarias para la realización del trabajo
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
DF<-import("Stores/DF.csv")
# Se crea una base para guardar las estadisticas descriptivas más relevantes para el trabajo:
vars = length(colnames(DF))
ED = data.frame('Variable' = colnames(DF), 'Missings' = rep(NA, vars), 'Media' =  rep(NA, vars), 'Desviacion Estandard' = rep(NA, vars))
# Se cuentan los missings y se calcula la media y la desviación estándar de la muestra:
for(col in colnames(DF)){
df = DF[,colnames(DF) == col]
NAs = sum(is.na(df))
mean = mean(df, na.rm = T)
sd = sqrt(var(df, na.rm = T))
ED[ED$Variable == col, 2] = NAs
ED[ED$Variable == col, 3] = mean
ED[ED$Variable == col, 4] = sd
}
# 1. Limpieza de datos:
# Se eliminan las constantes (u observaciones que tienen desviación estándar igual a cero) y las variables sin observaciones (missings):
C = ED %>% filter(Desviacion.Estandard == 0 | is.na(Desviacion.Estandard)) %>% select(Variable) %>% as.vector()
ED = ED %>% filter(Desviacion.Estandard != 0 | !is.na(Desviacion.Estandard))
DF = DF[!is.na(DF$y_ingLab_m_ha),]
DF = DF %>% select(-C$Variable)
DF = DF[DF$age!=78,]
DF=DF[!(rownames(DF)%in%c("5733", "579")),]
# 2. Estadisticas descriptivas:
base= DF %>% select(age,oficio, formal, maxEducLevel, orden, p7040, sex, sizeFirm, y_ingLab_m_ha, hoursWorkUsual)
base$ln_sal = log(base$y_ingLab_m_ha) #Se crea el logaritmo del salario por horas para normalizar los valores de la variable.
stargazer(base, type= "text", summary=T, title = "Estadisticas Descriptivas",out = "Views/esta_des.txt")
#Gráficas relevantes para las estadísticas descriptivas
#1. Histograma de la variable Y: salarios por horas
histograma_salario <- ggplot(base, aes(x=y_ingLab_m_ha)) +
geom_histogram(color="white",fill="darkblue") +
xlab('Salario por hora') + ylab('Frecuencia') +
theme_bw()
histograma_salario
ggsave("Views/histograma_sal.png", width = 6, height = 4,plot=histograma_salario)
#2. Histograma de la variable Y: log del salario por hora (transformación)
histograma <- ggplot(base, aes(x=ln_sal)) +
geom_histogram(color="white",fill="darkblue") +
xlab('Logaritmo del salario por hora') + ylab('Frecuencia') +
theme_bw()
histograma
ggsave("Views/histograma.png", width = 6, height = 4,plot=histograma)
#3. Gráfica de Dispersión: Edad vs. Logaritmo del Salario por hora
# El ln(w) es relativamente homocedastico sobre la edad.
dispersion = ggplot(base, aes(x=age, y=ln_sal)) + geom_point(color="navy") +
theme_bw() +
geom_smooth(method = 'lm',color="firebrick") +xlab('Edad')+
ylab('Logaritmo del salario por hora')
dispersion
ggsave("Views/dispersion.png", width = 6, height = 4,plot=dispersion)
#4. Gráfico de Barras: Sexo Vs. Salario Promedio
Salario_sex <- base %>% group_by(sex_factor)  %>%
summarize(mean_sal_sex=mean(y_ingLab_m_ha))
Salario_sex <- base %>% group_by(sex_factor)  %>%
summarize(mean_sal_sex=mean(y_ingLab_m_ha))
barras1 <- ggplot(Salario_sex, aes(x = sex_factor, y = mean_sal_sex)) +
geom_bar(width = 0.5, colour = "skyblue", fill = "skyblue", stat = "identity") +
labs(x = "Sexo", y = "Log del Salario por hora") +
theme_bw() +
scale_y_continuous(labels = scales::dollar_format())
Edad <-base %>% group_by(age) %>%
summarize(mean_sal=mean(y_ingLab_m_ha))
barras2 <- ggplot(Edad, aes(x = age, y = mean_sal)) +
geom_bar(width = 0.5, colour ="skyblue", fill = "skyblue", stat = "identity") +
labs(x = "Edad", y = "Salario promedio") +
theme_bw() +
scale_y_continuous(labels = scales::dollar_format())
barras2
ggsave("Views/barras2.png", width = 6, height = 4,plot=barras2)
base$sex_factor <- factor(base$sex, levels = c(1,0),
labels = c('Masculino', 'Femenino'))
Edad <-base %>% group_by(age) %>%
summarize(mean_sal=mean(y_ingLab_m_ha))
Salario_sex <- base %>% group_by(sex_factor)  %>%
summarize(mean_sal_sex=mean(y_ingLab_m_ha))
barras1 <- ggplot(Salario_sex, aes(x = sex_factor, y = mean_sal_sex)) +
geom_bar(width = 0.5, colour = "skyblue", fill = "skyblue", stat = "identity") +
labs(x = "Sexo", y = "Log del Salario por hora") +
theme_bw() +
scale_y_continuous(labels = scales::dollar_format())
barras1
ggsave("Views/barras1.png", width = 6, height = 4,plot=barras1)
ggsave("Views/barras1.png", width = 6, height = 4,plot=barras1)
base$age_2 <- base$age^2
modelo1 <- lm(ln_sal~age + age_2, data=base)
stargazer(modelo1, type="latex", title = "Resultados Modelo 1", out = "Views/mod1.txt")
modelo1
