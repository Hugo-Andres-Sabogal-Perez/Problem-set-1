#####
# My first Web Scraping
####
require(pacman)
p_load(tidyverse, # contiene las librer?as ggplot, dplyr...
rvest) # web-scraping
require(pacman)
install.packages("pacman")
require(pacman)
p_load(tidyverse, # contiene las librer?as ggplot, dplyr...
rvest) # web-scraping
my_url = "https://quotes.toscrape.com/"
my_html = read_html(my_url) #
View(my_html)
xml_child(my_html, 1)
xml_child(my_html, 2)
browseURL(my_url)
View(my_html)
div<- my_html %>% html_elements("div") %>%
html_elements("a") %>%
html_text2()
div[1]
quote<- my_html %>%
html_elements(".quote")
quote[1]
View(my_html)
xml_child(my_html, 1)
rm(list = ls())
rm(list = ls())
require(pacman)
p_load(tidyverse, # contiene las librer?as ggplot, dplyr...
rvest) # web-scraping
# primeros pasos con rvest
# rvest tiene varias funciones que pueden ser muy ?tiles.
# read_read_html
my_url = "https://quotes.toscrape.com/"
my_html = read_html(my_url) ## leer el html de la p?gina
browseURL(my_url)
div<- my_html %>% html_elements("div")
View(div)
div<- my_html %>% html_elements("div") %>%
html_elements("a")
View(div)
div[[1]]
div<- my_html %>% html_elements("div") %>%
html_elements("a") %>%
html_text2()
div[1]
print(div)
quote<- my_html %>%
html_elements(".quote")
View(quote)
quote[[1]]
tags <- my_html %>%
html_elements(".tag")%>%
html_text2()
print(tags)
div[1]
quote<- my_html %>%
html_elements(".quote")
quote[1]
tags <- my_html %>%
html_elements(".tag")%>%
html_text2()
tags[1]
tags <- my_html %>%
html_elements(".tag")%>%
html_text2()
class(tags)
tyoeof(tags)
typeof(tags)
print(tags)
a<-c("xd", "xd2")
a<-c("xd", 3)
rm(list = ls())
#####
# My first Web Scraping
####
rm(list = ls())
require(pacman)
p_load(tidyverse, # contiene las librer?as ggplot, dplyr...
rvest) # web-scraping
# primeros pasos con rvest
# rvest tiene varias funciones que pueden ser muy ?tiles.
# read_read_html
my_url = "https://quotes.toscrape.com/"
# request el HTML de la p?gina a R.
my_html = read_html(my_url) ## leer el html de la p?gina
##open the page
browseURL(my_url)
## obtengamos el titulo de la p?gina usando funciones simples de
## rvest.
div<- my_html %>% html_elements("div") %>%
html_elements("a") %>%
html_text2()
div[1]
quote<- my_html %>%
html_elements(".quote")
quote[1]
tags <- my_html %>%
html_elements(".tag")%>%
html_text2()
tags[1]
tags <- my_html %>%
html_elements(".tag")%>%
html_text2()
print(tags)
### obtengamos los linnks de cada autor
links<- my_html %>%
html_elements("a")%>%
html_attr("href")
links[2]
## pero obtenemos otros links que no deseamos
links<- my_html %>%
html_elements(".quote") %>%
html_element("a")%>%  #note element no elements
html_attr("href")
links[1]
print(links)
rm(list = ls())
require(pacman)
p_load(tidyverse, # contiene las librer?as ggplot, dplyr...
rvest) # web-scraping
my_link = "https://ignaciomsarmiento.github.io/GEIH2018_sample/"
div<- my_html %>% html_elements("div") %>%
html_elements("col-md-3") %>%
html_text2()
rm(list = ls())
require(pacman)
p_load(tidyverse, # contiene las librer?as ggplot, dplyr...
rvest) # web-scraping
my_link = "https://ignaciomsarmiento.github.io/GEIH2018_sample/"
my_html = read_html(my_link)
div<- my_html %>% html_elements("div")
View(div)
div<- my_html %>% html_elements("div") %>%
html_elements("col-md-3") %>%
View(div)
div<- my_html %>% html_elements("div") %>%
html_elements("col-md-3") %>%
html_text2()
div<- my_html %>% html_elements("div") %>%
html_elements(".col-md-3") %>%
html_text2()
div<- my_html %>% html_elements("div") %>%
html_elements(".col-md-3")
View(div)
View(div)
div<- my_html %>% html_elements("div") %>%
html_elements("col-md-3")
div<- my_html %>% html_elements("div") %>%
html_elements(".col-md-3")
View(div)
div[[1]]
div<- my_html %>%
html_elements(".col-md-3")
div<- my_html %>%  html_elements(".col-md-3")
View(div)
div<- my_html %>%  html_elements(".col-md-9")
View(div)
xml_child(div[[1]], 1)
div<- my_html %>%  html_elements(".col-md-9")  %>%
html_elements("a")
View(div)
div<- my_html %>%  html_elements(".col-md-9")  %>%
html_elements("ul")
View(div)
xml_child(div[[1]], 1)}
xml_child(div[[1]], 1)
div<- my_html %>%  html_elements(".col-md-9")  %>%
html_elements("ul") %>%  html_elements("a")
View(div)
